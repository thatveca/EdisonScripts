script "Isolate Channel" language "pascal";

uses Stereo;

procedure IsolateChannel(channel : Single; normalize : Boolean);
var n, c, x1, x2 : Integer;
    s, left, right, mid, side : Single;
begin

if (EditorSample.Length <= 0) or (EditorSample.NumChans < 1) then Exit;

// Check if the sample is mono and stereoize if neccessary
if (EditorSample.NumChans = 1) then MonoToStereo;

Editor.GetSelectionS(x1, x2);

// If nothing is selected, then select everything
if (x1 = x2) then
begin
    x1 := 0;
    x2 := EditorSample.Length - 1;
end;

for n := x1 to x2 do 
begin
    // Progress message
    if ((n - x1) mod 10000) = 0 then ProgressMsg('Isolating channel...', n - x1, x2 - x1);

    // Calculate channels
    left := EditorSample.GetSampleAt(n, 0);
    right := EditorSample.GetSampleAt(n, 1);
    mid := (left + right) / 2.0;
    side := (left - right) / 2.0;

    for c := 0 to (EditorSample.NumChans - 1) do
    begin
        s := 0;
        if (channel = 0) then s := left;
        if (channel = 1) then s := right;
        if (channel = 2) then s := mid;
        if (channel = 3) then s := side;
        if (channel = 4) then
        begin
            s := -1 * side;
            if (c = 0) then s := side; 
        end;

        EditorSample.SetSampleAt(n, c, s); // Set the sample finally
    end; // c
end; // n

// Normalize the sample
if normalize then EditorSample.NormalizeFromTo(x1, x2, 1.0);

end; // end function Isolate

// --------------------------------------------------------------------------

// Variables and constants
var Form:TScriptDialog;

const channelLbl = 'Channel';
const channelChoices = 'Left,Right,Mid,Side,aSide';
const channelDefault = 0; // Left

const normLbl = 'Normalize?';
const normChoices = 'No,Yes';
const normDefault = 0; // No

begin
Form := CreateScriptDialog('Isolate channel',
            'Left: Left channel copied to both channels' + CRLF +
            'Right: Right channel copied to both channels' + CRLF +
            'Mid: (Left + Right) / 2' + CRLF +
            'Side: (Left - Right) / 2' + CRLF +
            'aSide: Side with an inverted Right channel');
            
Form.AddInputCombo(channelLbl, channelChoices, channelDefault);
Form.AddInputCombo(normLbl, normChoices, normDefault);

if Form.Execute then IsolateChannel(Form.GetInputValue(channelLbl), Form.GetInputValue(normLbl) = 1);

Form.Free;
end.
